<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <artifactId>vidarr-server</artifactId>
  <name>Vidarr Analyis Provenance Server</name>
  <parent>
    <groupId>ca.on.oicr.gsi.vidarr</groupId>
    <artifactId>vidarr</artifactId>
    <version>1.0-SNAPSHOT</version>
    <relativePath>../pom.xml</relativePath>
  </parent>
  <dependencies>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-core</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
    </dependency>
    <dependency>
      <groupId>io.undertow</groupId>
      <artifactId>undertow-core</artifactId>
    </dependency>
    <dependency>
      <groupId>ca.on.oicr.gsi</groupId>
      <artifactId>server-utils</artifactId>
    </dependency>
    <dependency>
      <groupId>ca.on.oicr.gsi.vidarr</groupId>
      <artifactId>vidarr-pluginapi</artifactId>
    </dependency>
    <dependency>
      <groupId>ca.on.oicr.gsi.vidarr</groupId>
      <artifactId>vidarr-core</artifactId>
    </dependency>
    <dependency>
      <groupId>io.prometheus</groupId>
      <artifactId>simpleclient</artifactId>
    </dependency>
    <dependency>
      <groupId>io.prometheus</groupId>
      <artifactId>simpleclient_common</artifactId>
    </dependency>
    <dependency>
      <groupId>io.prometheus</groupId>
      <artifactId>simpleclient_hotspot</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jooq</groupId>
      <artifactId>jooq</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jooq</groupId>
      <artifactId>jooq-meta</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jooq</groupId>
      <artifactId>jooq-codegen</artifactId>
    </dependency>
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
    </dependency>
    <dependency>
      <groupId>org.flywaydb</groupId>
      <artifactId>flyway-core</artifactId>
    </dependency>
    <dependency>
      <groupId>com.zaxxer</groupId>
      <artifactId>HikariCP</artifactId>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>properties-maven-plugin</artifactId>
        <version>1.0.0</version>
        <executions>
          <execution>
            <phase>validate</phase>
            <goals>
              <goal>read-project-properties</goal>
            </goals>
            <configuration>
              <files>
                <file>${basedir}/db-generate.properties</file>
              </files>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.jooq</groupId>
        <artifactId>jooq-codegen-maven</artifactId>
        <version>3.14.0</version>
        <executions>
          <execution>
            <id>jooq-codegen</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <jdbc>
                <driver>org.postgresql.Driver</driver>
                <url>${dbUrl}</url>
                <user>${dbUser}</user>
                <password>${dbPassword}</password>
              </jdbc>
              <generator>
                <name>org.jooq.codegen.JavaGenerator</name>
                <database>
                  <name>org.jooq.meta.postgres.PostgresDatabase</name>
                  <inputSchema>public</inputSchema>
                  <includes>.*</includes>
                  <excludes/>
                  <forcedTypes>
                    <forcedType>
                      <userType>ca.on.oicr.gsi.vidarr.core.Phase</userType>
                      <lambdaConverter>
                        <from>i -&gt; Phase.values()[i]</from>
                        <to>Phase::ordinal</to>
                      </lambdaConverter>
                      <expression>public\.active_workflow_run\.engine_phase</expression>
                      <types>.*</types>
                    </forcedType>
                    <forcedType>
                      <userType>ca.on.oicr.gsi.vidarr.core.OperationStatus</userType>
                      <lambdaConverter>
                        <from>OperationStatus::valueOf</from>
                        <to>OperationStatus::name</to>
                      </lambdaConverter>
                      <expression>public\.active_operation\.status</expression>
                      <types>.*</types>
                    </forcedType>
                    <forcedType>
                      <userType>ca.on.oicr.gsi.vidarr.WorkflowLanguage</userType>
                      <lambdaConverter>
                        <from>WorkflowLanguage::valueOf</from>
                        <to>WorkflowLanguage::name</to>
                      </lambdaConverter>
                      <expression>public\.workflow_definition\.workflow_language</expression>
                      <types>.*</types>
                    </forcedType>
                    <forcedType>
                      <userType>com.fasterxml.jackson.databind.JsonNode</userType>
                      <binding>ca.on.oicr.gsi.vidarr.server.PostgresJSONBBinding</binding>
                      <includeExpression>.*</includeExpression>
                      <!-- We leave labels alone so we can manipulate them using the database functions -->
                      <excludeExpression>.*\.labels</excludeExpression>
                      <types>JSONB</types>
                    </forcedType>
                  </forcedTypes>
                </database>
                <target>
                  <packageName>ca.on.oicr.gsi.vidarr.server.jooq</packageName>
                  <directory>./src/main/java</directory>
                </target>
              </generator>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
